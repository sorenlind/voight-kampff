version: 2.1

orbs:
  gh: circleci/github-cli@1.0

workflows:
  workflow:
    jobs:
      - checkout:
          name: Checkout
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - lint:
          name: Python and Markdown linting
          requires:
            - Checkout
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - spelling:
          name: Spell check
          requires:
            - Checkout
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - build:
          name: Build
          requires:
            - Checkout
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - upload:
          name: Upload
          requires:
            - Python and Markdown linting
            - Spell check
            - Build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

jobs:
  checkout:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - run:
          name: Install enchant
          command: |
            sudo apt update
            sudo apt install enchant-2
      - run:
          name: Install markdownlint
          command: sudo npm install markdownlint-cli2 --global
      - run:
          name: Install pyright
          command: sudo npm install pyright --global
      - run:
          name: Upgrade pip
          command: pip3 install --upgrade pip
      - run:
          name: Install linters
          command: pip3 install bandit black flake8 pydocstyle pyenchant pylint
      - run:
          name: Install Voight-Kampff
          command: pip3 install ."[test]"
      - run:
          name: Bandit
          command: vk bandit
      - run:
          name: Black
          command: vk black
      - run:
          name: Flake8
          command: vk flake8
      - run:
          name: Markdownlint
          command: vk markdownlint
      - run:
          name: Pydocstyle
          command: vk pydocstyle
      - run:
          name: Pyright
          command: vk pyright
      - run:
          name: Pylint
          command: vk pylint

  spelling:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - run:
          name: Install enchant
          command: |
            sudo apt update
            sudo apt install enchant-2
      - run:
          name: Install cSpell
          command: sudo npm install cspell --global
      - run:
          name: Upgrade pip
          command: pip3 install --upgrade pip
      - run:
          name: Install Voight-Kampff
          command: pip3 install ."[test]"
      - run:
          name: Install pyenchant and pylint
          command: pip3 install pyenchant pylint
      - run:
          name: cSpell
          command: vk cspell
      - run:
          name: Pylint spelling
          command: vk pylint-spelling

  build:
    docker:
      - image: cimg/python:3.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upgrade pip
          command: pip3 install --upgrade pip
      - run:
          name: Install build
          command: pip install build
      - run:
          name: Substitute version
          command: |
            PACKAGE_VERSION=$(sed 's/^v//' \<<< ${CIRCLE_TAG:-0.0.0})
            sed -i "s/0.0.0/$PACKAGE_VERSION/" ./voight_kampff/version.py
      - run:
          name: Check version number
          command: python setup.py verify
      - run:
          name: Build
          command: |
            python3 -m build
      - persist_to_workspace:
          root: .
          paths:
            - .

  upload:
    docker:
      - image: cimg/python:3.10
    steps:
      - gh/setup
      - attach_workspace:
          at: .
      - run:
          name: Upgrade pip
          command: pip3 install --upgrade pip
      - run:
          name: Install twine
          command: pip install twine
      - run:
          name: Upload
          command: |
            twine upload dist/*
      - run:
          name: Create release
          command: |
            echo Creating release
            gh release create ${CIRCLE_TAG} ./dist/*.gz --title ${CIRCLE_TAG} --notes "$(git log `git tag --sort=-committerdate | head -1`...`git tag --sort=-committerdate | head -2 | tail -1` --pretty=format:"%h - **%s**%n%n%b")"
